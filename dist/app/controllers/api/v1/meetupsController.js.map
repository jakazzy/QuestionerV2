{"version":3,"sources":["../../../../../app/controllers/api/v1/meetupsController.js"],"names":["index","req","res","json","status","data","meetups","upcoming","upcomingMeetups","filter","meetup","done","create","errors","isEmpty","array","body","id","length","push","show","params","meetupID","undefined","error","rsvps","attendees","rsvp","createRsvp"],"mappings":"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","file":"meetupsController.js","sourcesContent":["// imports\nimport { validationResult } from 'express-validator/check';\nimport meetups from '../../../dataStore/meetupsTable';\nimport rsvps from '../../../dataStore/rsvpsTable(meetups-tables)';\n\n\nexport default {\n    index: (req, res) => {\n        res.json({\n            status: 200,\n            data: meetups,\n        });\n    },\n\n    upcoming: (req, res) => {\n        const upcomingMeetups = meetups.filter(meetup => meetup.done == false);\n\n        res.json({\n            status: 200,\n            data: upcomingMeetups,\n        });\n    },\n\n    create: (req, res) => {\n        const errors = validationResult(req);\n        if (!errors.isEmpty()) {\n            res.status(400).json({\n                status: 400,\n                errors: errors.array(),\n            });\n            return;\n        }\n\n        let meetup = req.body;\n        meetup.id = meetups.length + 1;\n        meetups.push(meetup);\n        res.status(201).json({\n            status: 201,\n            data: meetup,\n        });\n    },\n\n    show: (req, res) => {\n        const meetup = meetups[req.params.meetupID - 1];\n        if (meetup === undefined) {\n            res.status(404).json({\n                status: 404,\n                error: `Meetup with id ${req.params.meetupID} not found`,\n            });\n            return;\n        }\n\n        res.status(200).json({\n            status: 200,\n            data: meetup,\n        });\n    },\n\n    rsvps: (req, res) => {\n        if (meetups[req.params.meetupID - 1] === undefined) {\n            res.status(404).json({\n                status: 404,\n                error: `Meetup with id ${req.params.meetupID} not found`,\n            });\n            return;\n        }\n\n        let attendees = rsvps.filter(rsvp => rsvp.meetupID == req.params.meetupID);\n        res.json({\n            status: 200,\n            data: attendees,\n        });\n    },\n\n\n    createRsvp: (req, res) => {\n        const errors = validationResult(req);\n        if (!errors.isEmpty()) {\n            res.status(400).json({\n                status: 400,\n                errors: errors.array(),\n            });\n            return;\n        }\n\n        let rsvp = req.body;\n        rsvp.id = rsvps.length + 1;\n        rsvp.meetupID = req.params.meetupID;\n        rsvps.push(rsvp);\n        res.status(201).json({\n            status: 201,\n            data: rsvp,\n        });\n    },\n};"]}